language: shell
os: linux
services: docker
dist: focal

env:
  global:
  - IMAGE: quay.io/jmontleon/travis-multiarch-test
  - DEFAULT_BRANCH: main
  - DOCKERFILE: Dockerfile
  - DOCKER_CLI_EXPERIMENTAL: enabled
  - PLATFORM: linux/s390x,linux/ppc64le,linux/arm64,linux/amd64
before_install:
  - export TAG="${TRAVIS_BRANCH}"
  - if [ "${TRAVIS_BRANCH}" == "${DEFAULT_BRANCH}" ]; then export TAG=latest; fi
  - if [ -n "${QUAY_ROBOT}" ]; then export PUSH="--push"; fi
  - mkdir -vp ~/.docker/cli-plugins/
  - curl --silent -L "https://github.com/docker/buildx/releases/download/v0.7.0-rc1/buildx-v0.7.0-rc1.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
  - chmod a+x ~/.docker/cli-plugins/docker-buildx
  - docker buildx create --use
jobs:
  include:
  - stage: build image
    arch: amd64
    script:
    - sed -i 's/^RUN go mod download$//g' Dockerfile
    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
    - docker buildx build ${PUSH} --platform ${PLATFORM} -t ${IMAGE}:${TAG} -f ${DOCKERFILE} .
#    - docker build --progress=plain -t ${IMAGE}:${TAG}-${TRAVIS_ARCH} -f ${DOCKERFILE} .
#    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
#    - if [ -n "${QUAY_ROBOT}" ]; then docker push ${IMAGE}:${TAG}-${TRAVIS_ARCH}; fi
#  - arch: s390x
#    script:
#    - docker build -t ${IMAGE}:${TAG}-${TRAVIS_ARCH} -f ${DOCKERFILE} .
#    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
#    - if [ -n "${QUAY_ROBOT}" ]; then docker push ${IMAGE}:${TAG}-${TRAVIS_ARCH}; fi
#  - arch: amd64
#    script:
#    - docker build -t ${IMAGE}:${TAG}-${TRAVIS_ARCH} -f ${DOCKERFILE} .
#    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
#    - if [ -n "${QUAY_ROBOT}" ]; then docker push ${IMAGE}:${TAG}-${TRAVIS_ARCH}; fi
#  - arch: arm64
#    script:
#    - docker build -t ${IMAGE}:${TAG}-${TRAVIS_ARCH} -f ${DOCKERFILE} .
#    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
#    - if [ -n "${QUAY_ROBOT}" ]; then docker push ${IMAGE}:${TAG}-${TRAVIS_ARCH}; fi
#  - stage: push manifest
#    arch: amd64
#    script:
#    - if [ -n "${QUAY_ROBOT}" ]; then docker login quay.io -u "${QUAY_ROBOT}" -p ${QUAY_TOKEN}; fi
#    - docker manifest create ${IMAGE}:${TAG} ${IMAGE}:${TAG}-x86_64 ${IMAGE}:${TAG}-ppc64le ${IMAGE}:${TAG}-s390x ${IMAGE}:${TAG}-aarch64
#    - if [ -n "${QUAY_ROBOT}" ]; then manifest push ${IMAGE}:${TAG}; fi
